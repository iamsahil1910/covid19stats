{"version":3,"sources":["components/title.js","api/totalCases.js","components/totalStats.js","api/allCountryCases.js","components/allCountryData.js","api/allWorldData.js","components/charts/deathChart.js","components/charts/casesChart.js","components/app.js","index.js"],"names":["Title","className","href","style","margin","React","Component","axios","create","baseURL","TotalStats","state","total","death","recovered","activeCases","seriousCases","newCases","newDeath","newRecoverd","totalCasesRequest","a","totalCases","get","response","result","data","results","setState","total_cases","total_deaths","total_recovered","total_active_cases","total_serious_cases","total_new_cases_today","total_new_deaths_today","total_new_recovered_today","this","marginLeft","marginRight","marginTop","align","marginBottom","class","color","AllCountryData","allCountryCasesData","allCountryCases","countryitems","sortedData","i","push","sort","b","AllRecord","map","textAlign","title","DeathChart","requiredDate","country","month","year","mlist","allRecord","labels","datasets","label","fill","lineTension","barThickness","backgroundColor","borderColor","borderWidth","dates","allWorldData","console","log","cases","date","timelineitems","new_daily_deaths","countrytimelinedata","info","newDate","Date","getDate","getMonth","getFullYear","x","shortYear","parseInt","requireDate","toString","todayDate","height","options","display","text","fontSize","legend","position","LineChart","new_daily_cases","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.07e80ad6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Title extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"ui one center aligned fixed menu\">\r\n                    <a href=\"/\"><h2 className=\"ui center aligned item\">Covid-19 Stats</h2></a>\r\n                    <h3 style={{margin: 'auto'}} className=\"ui center  \">Stay Home, Stay Safe</h3>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Title;\r\n","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://api.thevirustracker.com/free-api?global=stats\" \r\n});\r\n\r\n\r\n","import React from 'react';\r\nimport totalCases from './../api/totalCases'\r\n\r\n\r\nclass TotalStats extends React.Component {\r\n\r\n    state = {\r\n                total: 0,\r\n                death: 0,\r\n                recovered: 0,\r\n                activeCases: 0,\r\n                seriousCases: 0,\r\n                newCases: 0,\r\n                newDeath: 0,\r\n                newRecoverd: 0\r\n                \r\n            };\r\n\r\n    componentDidMount() {\r\n\r\n        this.totalCasesRequest();\r\n        \r\n    }\r\n\r\n    totalCasesRequest = async () => {\r\n\r\n        const response = await totalCases.get();\r\n\r\n        const result = response.data.results[0];\r\n        this.setState({\r\n            total: result.total_cases,\r\n            death: result.total_deaths,\r\n            recovered: result.total_recovered,\r\n            activeCases: result.total_active_cases,\r\n            seriousCases: result.total_serious_cases,\r\n            newCases: result.total_new_cases_today,\r\n            newDeath: result.total_new_deaths_today,\r\n            newRecoverd: result.total_new_recovered_today\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div style={{ marginLeft:'10px', marginRight:'10px', marginTop: '40px', align: 'center' }} className=\"ui column center page grid\">  \r\n                <div style={{ marginBottom: '0'}}class=\"ui five item menu\">\r\n                    <div className=\"item\">Total Cases</div>\r\n                    <div className=\"item active\">Total Deaths</div>\r\n                    <div className=\"item\">Total Recovered</div>\r\n                    <div className=\"item\">Active Cases</div>\r\n                    <div className=\"item\">Serious Cases</div>\r\n\r\n                </div>  \r\n                <div style={{marginTop: '0'}} className=\"ui five item menu\">\r\n                    <div class=\"item\">\r\n                            <div style={{color: 'gray'}} className=\"value\">\r\n                                <h3>{this.state.total} &nbsp; (+{this.state.newCases})</h3>\r\n                            </div>               \r\n                    </div>\r\n                    <div class=\"item\">\r\n                            <div style={{color: 'red'}} className=\"value\">\r\n                                <h3>{this.state.death} &nbsp; (+{this.state.newDeath})</h3>\r\n                            </div>                      \r\n                    </div>\r\n                    <div style={{color: 'lightgreen'}} className=\"item\">\r\n                            <div class=\"value\">\r\n                                <h3>{this.state.recovered}</h3>\r\n                            </div>                                              \r\n                    </div>\r\n                    <div style={{color: 'darkyellow'}} className=\"item\">\r\n                            <div class=\"value\">\r\n                                <h3>{this.state.activeCases}</h3>\r\n                            </div>                                              \r\n                    </div>\r\n                    <div style={{color: 'red'}} className=\"item\">\r\n                            <div class=\"value\">\r\n                                <h3>{this.state.seriousCases}</h3>\r\n                            </div>                                              \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default TotalStats;\r\n","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://api.thevirustracker.com/free-api?countryTotals=ALL\" \r\n});\r\n\r\n","import React from 'react'\r\nimport allCountryCases from './../api/allCountryCases';\r\n\r\nclass AllCountryData extends React.Component {\r\n\r\n    state = {\r\n        data: []\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        this.allCountryCasesData();\r\n    }\r\n\r\n    allCountryCasesData = async () => {\r\n\r\n        const response = await allCountryCases.get();\r\n\r\n        const result = response.data.countryitems[0];\r\n        let sortedData = []\r\n        for (let i = 1; i <= 182; i++) {\r\n\r\n            sortedData.push(result[i])\r\n        }\r\n        sortedData.sort((a, b) => {\r\n        if(a.total_cases < b.total_cases){\r\n            return 1;\r\n        }else if(a.total_cases > b.total_cases){\r\n                return -1;\r\n        }else{\r\n                return 0;\r\n        }\r\n        });\r\n        this.setState({data: sortedData})\r\n    }\r\n\r\n    AllRecord = () => {\r\n\r\n        let dataRows = this.state.data.map((data) => {\r\n            return (\r\n            <tr>\r\n                <td style={{textAlign: 'center'}}>{data.title}</td>\r\n                <td>{data.total_cases} &nbsp; {(data.total_new_cases_today !== 0) ? \"(+\" + data.total_new_cases_today + \")\" : \" \"}</td>\r\n                <td className=\"negative\">{data.total_deaths} &nbsp; {(data.total_new_deaths_today !== 0) ? \"(+\" + data.total_new_deaths_today + \")\": \"\"}</td>\r\n                <td>{(data.total_recovered !== 0) ? data.total_recovered : \"Not Available or 0\" }</td>\r\n                <td>{data.total_active_cases}</td>\r\n                <td className=\"negative\">{data.total_serious_cases}</td>\r\n            </tr>);\r\n        });\r\n        return dataRows;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div style={{marginTop: '20px'}} className=\"ui sticky left align container\">\r\n                <table className=\"ui stackable celled table\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th>Country Name</th>\r\n                        <th>Total Cases</th>\r\n                        <th>Total Deaths</th>\r\n                        <th>Total Recovered</th>\r\n                        <th>Active Cases</th>\r\n                        <th>Serious Cases</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.AllRecord()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AllCountryData;","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://api.thevirustracker.com/free-api?countryTimeline=\" \r\n});\r\n\r\n\r\n","import React from 'react';\r\nimport allWorldData from '../../api/allWorldData'\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\nclass DeathChart extends React.Component {\r\n\r\n    state = {\r\n        requiredDate: '',\r\n        country: '',\r\n        month: 0,\r\n        year: 0,\r\n        mlist: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\r\n        allRecord: [],\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: '',\r\n            fill: false,\r\n            lineTension: 0.5,\r\n            barThickness: 8,\r\n            backgroundColor: '',\r\n            borderColor: 'rgba(0,0,0,1)',\r\n            borderWidth: 1,\r\n            data: []\r\n          }\r\n        ]\r\n      }\r\n\r\n      componentDidMount() {\r\n\r\n          let dates = this.requiredDate();  \r\n          this.totalCasesRequest('US', dates);\r\n                \r\n    }\r\n\r\n    totalCasesRequest = async (country, dates) => {\r\n\r\n        const response = await allWorldData.get(country);\r\n        const result = response.data;\r\n        console.log(dates)\r\n        let cases = dates.map(date => result.timelineitems[0][date].new_daily_deaths);\r\n        this.setState({\r\n            country: result.countrytimelinedata[0].info.title,\r\n            allRecord: result.timelineitems,\r\n            datasets: [\r\n                {\r\n                  label: 'Death',\r\n                  fill: false,\r\n                  lineTension: 0.5,\r\n                  barThickness: 8,\r\n                  backgroundColor: '',\r\n                  borderColor: 'rgba(0,0,0,1)',\r\n                  borderWidth: 1,\r\n                  data: cases\r\n                }\r\n              ]\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    requiredDate = () => {\r\n        let newDate = new Date();\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n        let x = year % 10;\r\n        let newYear = parseInt(year / 10);\r\n        let y = newYear % 10;\r\n        let shortYear = (y * 10) + x;\r\n        let requireDate = month.toString() + '/' + date.toString() + '/' + shortYear.toString();\r\n        let dates = [];\r\n        for (let i = 1; i < date; i++) {\r\n            if (i < 10) {\r\n                dates.push(month.toString() + '/0' + i.toString() + '/' + shortYear.toString())\r\n            } else {\r\n                dates.push(month.toString() + '/' + i.toString() + '/' + shortYear.toString())\r\n            }\r\n        }\r\n\r\n        this.setState({todayDate: requireDate, month: month, year: shortYear, labels: dates});\r\n\r\n        return dates;\r\n    }\r\n      \r\n        render() {\r\n            return (\r\n \r\n                        <div style={{height: '200px', marginTop: '10px'}}>\r\n                        <Bar\r\n                            data={this.state}\r\n                            options={{\r\n                                title:{\r\n                                display:true,\r\n                                text:'Death Graph (Hover over Bar to know Exact Value)',\r\n                                fontSize:15\r\n                                },\r\n                                legend:{\r\n                                display:true,\r\n                                position:'right'\r\n                                }\r\n                            }}\r\n                            />\r\n                        </div>\r\n            )\r\n        \r\n        }\r\n}\r\n\r\nexport default DeathChart;","import React from 'react';\r\nimport allWorldData from '../../api/allWorldData'\r\nimport DeathChart from './deathChart'\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\nclass LineChart extends React.Component {\r\n\r\n    state = {\r\n        requiredDate: '',\r\n        country: '',\r\n        month: 0,\r\n        year: 0,\r\n        mlist: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\r\n        allRecord: [],\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: '',\r\n            fill: false,\r\n            lineTension: 0.5,\r\n            barThickness: 8,\r\n            backgroundColor: '',\r\n            borderColor: 'rgba(0,0,0,1)',\r\n            borderWidth: 1,\r\n            data: []\r\n          }\r\n        ]\r\n      }\r\n\r\n      componentDidMount() {\r\n\r\n          let dates = this.requiredDate();  \r\n          this.totalCasesRequest('US', dates);\r\n                \r\n    }\r\n\r\n    totalCasesRequest = async (country, dates) => {\r\n\r\n        const response = await allWorldData.get(country);\r\n        const result = response.data;\r\n        console.log(dates)\r\n        let cases = dates.map(date => result.timelineitems[0][date].new_daily_cases);\r\n        this.setState({\r\n            country: result.countrytimelinedata[0].info.title,\r\n            allRecord: result.timelineitems,\r\n            datasets: [\r\n                {\r\n                  label: 'Cases',\r\n                  fill: false,\r\n                  lineTension: 0.5,\r\n                  barThickness: 8,\r\n                  backgroundColor: '',\r\n                  borderColor: 'rgba(0,0,0,1)',\r\n                  borderWidth: 1,\r\n                  data: cases\r\n                }\r\n              ]\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    requiredDate = () => {\r\n        let newDate = new Date();\r\n        let date = newDate.getDate();\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n        let x = year % 10;\r\n        let newYear = parseInt(year / 10);\r\n        let y = newYear % 10;\r\n        let shortYear = (y * 10) + x;\r\n        let requireDate = month.toString() + '/' + date.toString() + '/' + shortYear.toString();\r\n        let dates = [];\r\n        for (let i = 1; i < date; i++) {\r\n            if (i < 10) {\r\n                dates.push(month.toString() + '/0' + i.toString() + '/' + shortYear.toString())\r\n            } else {\r\n                dates.push(month.toString() + '/' + i.toString() + '/' + shortYear.toString())\r\n            }\r\n        }\r\n\r\n        this.setState({todayDate: requireDate, month: month, year: shortYear, labels: dates});\r\n\r\n        return dates;\r\n    }\r\n      \r\n        render() {\r\n            return (\r\n            <div>\r\n                <div className=\"ui message\">\r\n                    <div className=\"header\">\r\n                    Country : {this.state.country} &nbsp; ({this.state.mlist[this.state.month - 1]})\r\n                        </div>\r\n                        <div style={{height: '200px'}}>\r\n                        <Bar\r\n                            data={this.state}\r\n                            options={{\r\n                                title:{\r\n                                display:true,\r\n                                text:'Cases Graph (Hover over Bar to know Exact Value)',\r\n                                fontSize:15,\r\n                                },\r\n                                legend:{\r\n                                display:true,\r\n                                position:'right'\r\n                                }\r\n                            }}\r\n                         />    \r\n                        </div>\r\n                        <DeathChart />\r\n                    </div>      \r\n            </div>\r\n            );\r\n        }\r\n        }\r\n\r\nexport default LineChart;","import React from 'react';\r\nimport Title from './title'\r\nimport TotalStats from './totalStats'\r\nimport AllCountryData from './allCountryData'\r\nimport LineChart from './charts/casesChart'\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Title />  \r\n                <TotalStats />\r\n                <div className=\"ui conatiner\">\r\n                <div className=\"ui grid\">\r\n                    <div className=\"ui row\">\r\n                        <div style={{margin: 'auto'}}className=\"nine wide column\">\r\n                                <AllCountryData />\r\n                        </div>\r\n\r\n                            <div style={{marginTop: '20px'}} className=\"ui sticky fixed six wide column center page grid\">\r\n                            <div className=\"ui fixed sticky\">\r\n                            <LineChart />\r\n                            <div className=\"ui message\">\r\n                                <div className=\"header\">\r\n                                    Support\r\n                                </div>\r\n                                <ul className=\"list\">\r\n                                    <li>To Contribute : <a href=\"https://github.com/iamsahil1910/covid19stats\">Click Here</a></li>\r\n                                    <li>To provide detailed data country API: Email: <a href=\"mailto:iamsahil1910@gmail.com\">iamsaihl1910@gmail.com</a></li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className=\"ui message\">\r\n                                <div className=\"header\">\r\n                                    New Site Features\r\n                                </div>\r\n                                <ul className=\"list\">\r\n                                    <li>World Data: <a href=\"https://thevirustracker.com/\">The Virus Tracker</a></li>\r\n                                    <li>India data (coming soon): <a href=\"https://www.covid19india.org\">Covid19India</a></li>\r\n                                </ul>\r\n                            </div>\r\n                            </div>\r\n                            </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\n\r\nReactDOM.render( <App />, document.querySelector('#root'));"],"sourceRoot":""}